@* NotebookDetail page *@

@page "/notebookdetail/{NotebookId}"
@using ApexLM.Services
@using ApexLM.Components
@using MudBlazor
@inject NavigationManager Navigation
@inject ILayoutService LayoutService

<MudLayout>
    <!-- Mobile Header -->
    <MudAppBar Elevation="1" Class="d-lg-none">
        <MudText Typo="Typo.h6" Class="text-truncate px-2">
            @currentNotebook?.Title
        </MudText>
        <MudSpacer />
        <MudIconButton Icon="Icons.Material.Filled.MoreVert"
                       Color="Color.Inherit"
                       Edge="Edge.End" />
    </MudAppBar>

    <MudMainContent>
        <div class="notebook-container">
            <!-- Mobile Tab Navigation -->
            <MudPaper Class="d-lg-none mobile-tabs" Elevation="0">
                <MudTabs @bind-ActivePanelIndex="mobileActiveTab" Color="Color.Primary" Centered="true">
                    <MudTabPanel Text="Sources">
                        <MudIcon Icon="@Icons.Material.Filled.Folder" Class="mr-2" />
                        Sources
                    </MudTabPanel>
                    <MudTabPanel Text="Chat">
                        <MudIcon Icon="@Icons.Material.Filled.Chat" Class="mr-2" />
                        Chat
                    </MudTabPanel>
                    <MudTabPanel Text="Studio">
                        <MudIcon Icon="@Icons.Material.Filled.AutoAwesome" Class="mr-2" />
                        Studio
                    </MudTabPanel>
                </MudTabs>
            </MudPaper>

            <!-- Three Pane Layout -->
            <div class="three-pane-container">
                <!-- Left Pane - Sources -->
                <div class="pane left-pane d-none d-lg-block">
                    <SourcePanel NotebookId="@NotebookId"
                                 SourceCount="@(currentNotebook?.SourceCount ?? 0)"
                                 OnSourcesClick="HandleSourcePanelClick" />
                </div>

                <!-- Middle Pane - Chat -->
                <div class="pane middle-pane @(mobileActiveTab == 1 ? "d-block" : "d-lg-block")">
                    <ChatArea NotebookId="@NotebookId"
                              NotebookTitle="@currentNotebook?.Title" />
                </div>

                <!-- Right Pane - Studio -->
                <div class="pane right-pane d-none d-lg-block">
                      <StudioPanel NotebookId="@NotebookId" IsMobile="false" OnFeatureClick="HandleStudioFeatureClick" />
                </div>

                <!-- Mobile Panes -->
                <div class="d-lg-none mobile-panes">
                    @if (mobileActiveTab == 0)
                    {
                        <SourcePanel NotebookId="@NotebookId"
                                     SourceCount="@(currentNotebook?.SourceCount ?? 0)"
                                     IsMobile="true" />
                    }
                    else if (mobileActiveTab == 2)
                    {
                        <StudioPanel NotebookId="@NotebookId"
                                     IsMobile="true"
                                     OnFeatureClick="HandleStudioFeatureClick" />
                    }
                </div>
            </div>
        </div>
    </MudMainContent>
</MudLayout>

@code {
    [Parameter] public string NotebookId { get; set; } = string.Empty;

    private Notebook? currentNotebook;
    private int mobileActiveTab = 1; // Default to Chat on mobile

    protected override void OnParametersSet()
    {
        LoadNotebook();
    }

    // Add this method to handle studio feature clicks from child component (Post processing)
    private void HandleStudioFeatureClick(string featureType)
    {
        Console.WriteLine($"🎯 STUDIO FEATURE CLICKED in NotebookDetail:");
        Console.WriteLine($"   - Notebook: {NotebookId}");
        Console.WriteLine($"   - Feature: {featureType}");
        Console.WriteLine($"   - Mobile Tab: {mobileActiveTab}");

        // Add your feature handling logic here
        switch (featureType)
        {
            case "AudioOverview":
                Console.WriteLine("🎵 Processing audio overview...");
                break;
            case "VideoOverview":
                Console.WriteLine("🎥 Processing video overview...");
                break;
            case "MindMap":
                Console.WriteLine("🗺️ Generating mind map...");
                break;
            case "Reports":
                Console.WriteLine("📊 Creating reports...");
                break;
            case "Flashcards":
                Console.WriteLine("📇 Building flashcards...");
                break;
        }
    }

    // Add this method to handle source panel clicks from child component (Post processing)
    private void HandleSourcePanelClick()
    {
        Console.WriteLine($"🎯 SOURCE PANEL CLICKED in NotebookDetail:");
        Console.WriteLine($"   - Notebook: {NotebookId}");
    }

    private void LoadNotebook()
    {
        var allNotebooks = GetSampleNotebooks();
        currentNotebook = allNotebooks.FirstOrDefault(n => n.Id == NotebookId);

        if (currentNotebook == null)
        {
            Navigation.NavigateTo("/");
            return;
        }

        LayoutService.SetTitle(currentNotebook.Title);
    }


    private List<Notebook> GetSampleNotebooks()
    {
        return new List<Notebook>
        {
            new Notebook { Id = "1", Title = "The Two Sequences", Description = "Parenting Advice for the Digital Age", Date = "May 4, 2025", SourceCount = 21 },
            new Notebook { Id = "2", Title = "On World in Duff", Description = "Trends in Health, Wealth and...", Date = "Apr 15, 2025", SourceCount = 24 },
            new Notebook { Id = "3", Title = "The Encrowded", Description = "The World Ahead 2025", Date = "Jul 7, 2025", SourceCount = 10 },
            new Notebook { Id = "4", Title = "The Atlantic", Description = "How To Build A Life, from The Atlantic", Date = "Apr 22, 2025", SourceCount = 44 },
            new Notebook { Id = "5", Title = "New notebook", Description = "Antl and Culture\nWilliam Shakespeare: The...", Date = "Apr 25, 2025", SourceCount = 45 }
        };
    }

    public class Notebook
    {
        public string Id { get; set; } = string.Empty;
        public string Title { get; set; } = string.Empty;
        public string Description { get; set; } = string.Empty;
        public string Date { get; set; } = string.Empty;
        public int SourceCount { get; set; }
    }
}

<style>
    /* Reset any default margins/padding */
    * {
        box-sizing: border-box;
    }

    .notebook-container {
        height: 85vh;       /*only this change remove scroll*/
        display: flex;
        flex-direction: column;
        overflow: hidden; /* Prevent outer scrolling */
    }

    .three-pane-container {
        display: flex;
        flex: 1;
        overflow: hidden; /* Prevent inner scrolling */
        height: 100%;
    }

    .pane {
        display: flex;
        flex-direction: column;
        overflow: hidden; /* Each pane controls its own overflow */
        border-right: 1px solid var(--mud-palette-lines-default);
    }

    .left-pane {
        width: 380px;
        min-width: 380px;
        flex-shrink: 0;
    }

    .middle-pane {
        flex: 1;
        min-width: 0;
    }

    .right-pane {
        width: 320px;
        min-width: 320px;
        flex-shrink: 0;
        border-right: none;
    }

    .mobile-tabs {
        flex-shrink: 0;
    }

    .mobile-panes {
        flex: 1;
        overflow: hidden;
    }

    /* Hide scrollbars but keep functionality */
    .pane {
        scrollbar-width: none; /* Firefox */
        -ms-overflow-style: none; /* IE and Edge */
    }

        .pane::-webkit-scrollbar {
            display: none; /* Chrome, Safari and Opera */
        }

    /* Responsive adjustments */
    @@media (max-width: 1280px) {
        .left-pane {
            width: 340px;
            min-width: 340px;
        }

        .right-pane {
            width: 280px;
            min-width: 280px;
        }
    }

    @@media (max-width: 960px) {
        .three-pane-container {
            height: calc(100vh - 112px);
        }
    }
</style>